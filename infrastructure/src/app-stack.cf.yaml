AWSTemplateFormatVersion: "2010-09-09"
Description: Template for the ausvotes.info application

Parameters:

  DeploymentArtefactBucket:
    Type: String

  RecountLambdaCodeKey:
    Type: String

  RecountDataBucketName:
    Type: String

  AusvotesDomainCertificateId:
    Type: String
    Default: 23687a6f-6621-407d-b725-2bd5aa8f7721

  AusvotesRegionalDomainCertificateId:
    Type: String
    Default: d27ecc7d-23f2-4920-b960-d7a6b169a40f

  AusvotesDomainCertificateCnameName:
    Type: String
    Default: _6a0e3e9f773b7d628e8ae961bf0cc746.ausvotes.info.

  AusvotesDomainCertificateCnameValue:
    Type: String
    Default: _8a7310fe67246f051e59241f5f8ebbde.tljzshvwok.acm-validations.aws.

  AusvotesDomainName:
    Type: String
    Default: ausvotes.info

  AusvotesApiDomainName:
    Type: String
    Default: api.ausvotes.info

  AusvotesUiDomainName:
    Type: String
    Default: ausvotes.info

  AusvotesBlogDomainName:
    Type: String
    Default: blog.ausvotes.info

  AusvotesUiDockerImage:
    Type: String

  AusvotesApiDockerImage:
    Type: String

  AusvotesBlogDockerImage:
    Type: String

Resources:

  AusvotesHostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: !Ref AusvotesDomainName

  AusvotesUiDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref AusvotesHostedZone
      Name: !Ref AusvotesUiDomainName
      AliasTarget:
        DNSName: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerUrl
        HostedZoneId: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerHostedZoneId
      Type: A

  AusvotesApiDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref AusvotesHostedZone
      Name: !Ref AusvotesApiDomainName
      AliasTarget:
        DNSName: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerUrl
        HostedZoneId: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerHostedZoneId
      Type: A

  AusvotesBlogDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref AusvotesHostedZone
      Name: !Ref AusvotesBlogDomainName
      AliasTarget:
        DNSName: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerUrl
        HostedZoneId: !GetAtt AusvotesUiAlb.Outputs.LoadBalancerHostedZoneId
      Type: A

  AusvotesCertificateValidationDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref AusvotesHostedZone
      Name: !Ref AusvotesDomainCertificateCnameName
      ResourceRecords:
      - !Ref AusvotesDomainCertificateCnameValue
      TTL: 86400
      Type: CNAME

  RecountDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RecountDataBucketName

  RecountDataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RecountDataBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Principal: "*"
          Resource: !Sub
          - "${bucket_name}/*"
          - bucket_name: !GetAtt RecountDataBucket.Arn
        - Action:
          - s3:ListBucket
          Effect: Allow
          Principal:
            AWS:
            - !GetAtt RecountLambdaIamRole.Arn
          Resource: !GetAtt RecountDataBucket.Arn
        - Action:
          - s3:ListBucket
          Effect: Allow
          Principal:
            AWS:
            - !GetAtt AusvotesApiService.Outputs.TaskRoleArn
          Resource: !GetAtt RecountDataBucket.Arn
        - Action:
          - s3:PutObject
          Effect: "Allow"
          Principal:
            AWS:
            - !GetAtt RecountLambdaIamRole.Arn
          Resource: !Sub
          - "${bucket_name}/recounts/*"
          - bucket_name: !GetAtt RecountDataBucket.Arn

  RecountLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentArtefactBucket
        S3Key: !Ref RecountLambdaCodeKey
      Environment:
        Variables:
          RECOUNT_DATA_BUCKET: !Ref RecountDataBucketName
      FunctionName: recount
      Handler: au.id.tmm.ausvotes.lambdas.recount.RecountLambda
      MemorySize: 3008
      Role: !GetAtt RecountLambdaIamRole.Arn
      Runtime: java8
      Timeout: 60

  RecountLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt RecountLambda.Arn
      Principal: !GetAtt AusvotesApiService.Outputs.TaskRoleArn

  RecountLambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        "Version": "2012-10-17"
        "Statement":
        - "Action": "sts:AssumeRole"
          "Principal":
            "Service": "lambda.amazonaws.com"
          "Effect": "Allow"

  BasicLambdaPermissionsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: basic_lambda_permissions
      Roles:
      - !Ref RecountLambdaIamRole
      PolicyDocument:
        "Version": "2012-10-17"
        "Statement":
        - "Effect": "Allow"
          "Action":
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          - "logs:DescribeLogStreams"
          "Resource":
          - !Sub
            - "arn:aws:logs:${region}:${account_id}:log-group:*"
            - region: !Ref AWS::Region
              account_id: !Ref AWS::AccountId

  ReadS3PermissionsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: read_s3
      Roles:
      - !Ref RecountLambdaIamRole
      PolicyDocument:
        "Version": "2012-10-17"
        "Statement":
        - "Effect": "Allow"
          "Action":
          - "s3:GetObject"
          "Resource": !Sub
          - "${bucket_arn}/*"
          - bucket_arn: !GetAtt RecountDataBucket.Arn
        - "Effect": "Allow"
          "Action":
          - "s3:ListBucket"
          "Resource": !GetAtt RecountDataBucket.Arn

  EcsVpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-base/vpc.yaml'
      Parameters:
        EnvironmentName: !Ref AWS::StackName

  EcsSecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-base/security-groups.yaml'
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt EcsVpc.Outputs.VPC

  AusvotesUiAlb:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-base/load-balancers.yaml'
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt EcsVpc.Outputs.VPC
        Subnets: !GetAtt EcsVpc.Outputs.PublicSubnets
        SecurityGroup: !GetAtt EcsSecurityGroups.Outputs.LoadBalancerSecurityGroup
        CertificateId: !Ref AusvotesRegionalDomainCertificateId

  Ecs:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-base/ecs-cluster.yaml'
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t3.small
        ClusterSize: 1
        VPC: !GetAtt EcsVpc.Outputs.VPC
        SecurityGroup: !GetAtt EcsSecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt EcsVpc.Outputs.PublicSubnets

  AusvotesApiService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-services/ausvotes-api-service.yaml'
      Parameters:
        VPC: !GetAtt EcsVpc.Outputs.VPC
        Cluster: !GetAtt Ecs.Outputs.Cluster
        Image: !Ref AusvotesApiDockerImage
        DesiredCount: 1
        Listener: !GetAtt AusvotesUiAlb.Outputs.Listener
        Path: /*
        Host: !Ref AusvotesApiDomainName
        ECSServiceAutoScalingRoleARN: !GetAtt Ecs.Outputs.ECSServiceAutoScalingRole
        RecountDataBucketName: !Ref RecountDataBucketName

  AusvotesBlogService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-services/ausvotes-blog-service.yaml'
      Parameters:
        VPC: !GetAtt EcsVpc.Outputs.VPC
        Cluster: !GetAtt Ecs.Outputs.Cluster
        Image: !Ref AusvotesBlogDockerImage
        DesiredCount: 1
        Listener: !GetAtt AusvotesUiAlb.Outputs.Listener
        Path: /*
        Host: !Ref AusvotesBlogDomainName
        ECSServiceAutoScalingRoleARN: !GetAtt Ecs.Outputs.ECSServiceAutoScalingRole

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3-${AWS::Region}.amazonaws.com/${DeploymentArtefactBucket}/au.id.tmm/ausvotes/cf/templates/ecs-base/lifecyclehook.yaml'
      Parameters:
        Cluster: !GetAtt Ecs.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt Ecs.Outputs.ECSAutoScalingGroupName
