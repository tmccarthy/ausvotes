import au.id.tmm.ausvotes.buildsrc.DeleteS3Task

plugins {
    id "seek.aws" version "0.0.26"
    id "seek.cloudformation" version "0.0.26"
}

[
        ':lambdas:recount',
        ':lambdas:recountEnqueue',
].each {
    evaluationDependsOn(it)
}

aws {
    region 'ap-southeast-2'
}

ext.recountDataBucketName = 'recount-data.buckets.ausvotes.info'

cloudFormation {
    stackName rootProject.name
    templateFile file('src/app-stack.cf.yaml')
    parameters ([
            DeploymentArtefactBucket: deploymentBucket,
            RecountLambdaCodeKey: project(':lambdas:recount').ext.deploymentBucketKey,
            RecountEnqueueLambdaCodeKey: project(':lambdas:recountEnqueue').ext.deploymentBucketKey,
            RecountDataBucketName: recountDataBucketName,
    ])
}

[
        project(':lambdas:recount').tasks.uploadToDeploymentBucket,
        project(':lambdas:recountEnqueue').tasks.uploadToDeploymentBucket,
].each {
    tasks.createOrUpdateStack.dependsOn(it)
}

task deployIfMaster(type: GradleBuild) {
    onlyIf {
        grgit.open(dir: rootProject.projectDir).branch.current.name == 'master' ||
                System.env.TRAVIS_BRANCH == 'master'
    }

    startParameter.logLevel = LogLevel.INFO
    startParameter.showStacktrace = ShowStacktrace.ALWAYS_FULL

    tasks = [':infrastructure:createOrUpdateStack']
}

task clearRecountsCache(type: DeleteS3Task, group: 'build') {
    bucket = recountDataBucketName
    prefix = 'recounts/'
}
