import au.id.tmm.ausvotes.buildsrc.BuildUtils

plugins {
    id 'com.palantir.docker' version '0.13.0'
    id 'com.palantir.docker-run' version '0.13.0'
}

apply plugin: 'idea'

def dockerSrcDir = file('src').toPath()

docker {
    name 'tmccarthy/ausvotes-backend-database'
    tags (isSnapshot ? 'latest' : project.version)
    dockerfile dockerSrcDir.resolve('Dockerfile').toFile()
    files fileTree(dockerSrcDir.toFile()).exclude('Dockerfile')
}

// Workaround for bug in dockerRun plugin when volume names are specified using absolute path
def devenvDataDir = 'devenv_data'
BuildUtils.createDirectoryIfMissing(file(devenvDataDir))
// def devenvDataDir = BuildUtils.createDirectoryIfMissing(file('devenv_data'))
idea.module.excludeDirs += file(devenvDataDir)

// This configuration is designed to support a local development stack
dockerRun {
    name 'devenv_backend_db'
    image docker.name
    volumes "${devenvDataDir}": '/var/lib/postgresql/data'
    env(
            'POSTGRES_DB': 'ausvotes_backend',
            'POSTGRES_USER': 'ausvotes_backend',
            'POSTGRES_PASSWORD': BuildUtils.writeIfMissing(file('devenv_password.txt'), 'password').getText("UTF-8")
    )
    ports '5432:5432'
    clean = true
}

task clean(type: Delete) {
    dependsOn tasks.dockerClean
    delete buildDir
}

tasks.withType(Exec.class) {
    environment = new HashMap()
}

tasks.dockerPush {
    doFirst {
        if (project.isSnapshot) {
            throw new GradleException("Cannot push a non-snapshot version")
        }
    }
}
