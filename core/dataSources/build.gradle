apply plugin: au.id.tmm.ausvotes.buildsrc.MyScalaPlugin

configurations {
    testOutput
}

sourceSets {
    integrationTest {
        scala {
            srcDirs = ['src/integration-test/scala']
        }
        resources {
            srcDirs = ['src/integration-test/resources']
        }
    }
}

dependencies {
    compile project(':core:model')
    compile project(':shared:io')

    def countStvVersion = '0.2.1'

    compile "au.id.tmm.countstv:countstv-core${s}:$countStvVersion"
    compile "au.id.tmm.countstv:countstv-circe${s}:$countStvVersion"

    compile "io.circe:circe-core${s}:$circeVersion"
    compile "io.circe:circe-parser${s}:$circeVersion"
    compile "com.github.tototoshi:scala-csv${s}:1.3.6"
    compile 'org.apache.poi:poi:4.1.0'
    compile 'org.apache.poi:poi-ooxml:4.1.0'

    compile "org.typelevel:mouse${s}:0.22"

    compile "org.scalaz:scalaz-zio-interop-cats${s}:$scalazZioVersion"

    testCompile project(':core:fixtures')
    testCompile project(':shared:testIo')

    integrationTestCompile sourceSets.main.output
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testCompile
    integrationTestRuntime configurations.testRuntime

    testOutput sourceSets.test.output
}

task integrationTest(type: Test) {
    shouldRunAfter tasks.test
    testClassesDirs = sourceSets.integrationTest.output
    classpath = files(sourceSets.integrationTest.runtimeClasspath, sourceSets.test.runtimeClasspath)
}

check.dependsOn integrationTest

